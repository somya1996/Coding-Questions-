// code snippet
class GfG
{
    Node flatten(Node root)
    {
	    if (root == null || root.next == null) 
                return root; 
      
            // recur for list on right 
            root.next = flatten(root.next); 
      
            // now merge 
            root = mergeTwoLists(root, root.next); 
      
            // return the root 
            // it will be in turn merged with its left 
            return root; 
    }
    public static Node mergeTwoLists(Node l1, Node l2) {
        
        Node temp = new Node(0);
        Node res = temp;
        while(l1 != null && l2 != null){
            if(l1.data <= l2.data){
                temp.bottom = l1;
                temp = temp.bottom;
                l1 = l1.bottom;
            }
            else{
                temp.bottom = l2;
                temp = temp.bottom;
                l2 = l2.bottom;
            }
        }
        if(l1 != null && l2 == null){
            temp.bottom = l1;
            l1 = l1.bottom;
            temp = temp.bottom;
        }
        if(l2 != null && l1 == null){
            temp.bottom = l2;
            l2 = l2.bottom;
            temp = temp.bottom;
        }
        return res.bottom;
    }
}
